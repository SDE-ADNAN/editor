{"version":3,"sources":["components/EditorDesign/NavBar/NavBar.jsx","components/EditorDesign/Cards/TemplatesCard.jsx","components/EditorDesign/EditorTemplates.jsx","media/bg.jpg","App.js","store/auth-slice.js","store/campaign-slice.js","store/index.js","index.js"],"names":["NavBar","props","_jsxs","className","children","_jsx","download","_Fragment","downloadElement","TemplatesCard","align","alt","image","src","text","templates","EditorTemplates","show","setShow","useState","linkText","onClick","map","template","index","Editor","React","lazy","App","isLoggedIn","useSelector","state","auth","urlHit","localStorage","getItem","setItem","urlHit2","Number","bgwallpaper","Suspense","fallback","Switch","Route","path","exact","Redirect","to","initialToken","initialState","token","phone","authSlice","createSlice","name","reducers","login","action","payload","logout","removeItem","actions","campaignSlice","campaigns","replaceCampaigns","forEach","campaign","status","is_paid","is_approved","is_active","quantity","distributed_qty","store","configureStore","reducer","authReducer","campaignReducer","ReactDOM","render","Provider","BrowserRouter","document","getElementById"],"mappings":"0IAsCeA,IA9Bf,SAAgBC,GACd,OACEC,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,aAmBfE,cAAA,OAAKF,UAAU,WAAUC,SACtBH,EAAMK,UAAYD,cAAAE,WAAA,CAAAH,SAAGH,EAAMO,sBAKpC,C,+PCnBeC,MAdf,SAAuBR,GACrB,OACEI,cAAA,OAAAD,SACEF,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCC,cAAA,OAAKK,MAAM,SAAQN,SACjBC,cAAA,OAAKM,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMW,UAGpCP,cAAA,OAAAD,SAAMH,EAAMa,WAIpB,ECPA,MAAMC,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA6D/BC,MA3Df,WACE,MAAOC,EAAMC,GAAWC,oBAAS,GACjC,OACEjB,eAAA,OAAAE,SAAA,CACEC,cAACL,IAAM,CAACoB,SAAS,iCACjBlB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CAyBnBF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBC,cAAA,OACEF,UAAYc,EAAoB,oBAAb,WACnBI,QAASA,IAAMH,GAAQ,GAAMd,SAC9B,mBAGDC,cAAA,OACEF,UAAWc,EAAO,WAAa,oBAC/BI,QAASA,IAAMH,GAAQ,GAAOd,SAC/B,kBAIFa,GACCZ,cAAAE,WAAA,CAAAH,SACEC,cAAA,OAAKF,UAAU,aAAYC,SACxBW,EAAUO,KAAI,CAACC,EAAUC,IACjBnB,cAACI,EAAa,WAK3BQ,GAAQZ,cAAA,MAAAD,SAAI,kBAItB,E,QCnEe,MAA0B,+BCUzC,MAAMqB,EAASC,IAAMC,MAAK,IAAM,sDAsCjBC,MApCf,WACE,MAAMC,EAAaC,aAAaC,GAAUA,EAAMC,KAAKH,aACrD,IAAII,EAASC,aAAaC,QAAQ,aAClCD,aAAaE,QAAQ,YAAa,GAClC,IAAIC,EAAUC,OAAOL,GAAU,EAG/B,OAFAC,aAAaE,QAAQ,YAAaC,GAGhCnC,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,uBAAsBC,SACnCC,cAAA,OAAKF,UAAU,cAAcU,IAAK0B,EAAa5B,IAAK,YAEtDN,cAACmC,WAAQ,CAACC,SAAUpC,cAAA,KAAAD,SAAG,eAAeA,SACpCC,cAACqC,SAAM,CAAAtC,UACHyB,GACA3B,eAAAK,WAAA,CAAAH,SAAA,CACEC,cAACsC,QAAK,CAACC,KAAK,IAAIC,OAAK,EAAAzC,SACnBC,cAACyC,WAAQ,CAACC,GAAG,cAEf1C,cAACsC,QAAK,CAACC,KAAK,YAAYC,OAAK,EAAAzC,SAC3BC,cAACW,EAAe,MAElBX,cAACsC,QAAK,CAACC,KAAK,UAAUC,OAAK,EAAAzC,SACzBC,cAACoB,EAAM,MAETpB,cAACsC,QAAK,CAACC,KAAK,kBAAkBC,OAAK,EAAAzC,SACjCC,cAACoB,EAAM,eAQvB,E,QC5CA,MAAMuB,EAAed,aAAaC,QAAQ,SAGpCc,EAAe,CAAEC,MAAOF,EAAcnB,aAAcmB,EAAcG,MAFnDjB,aAAaC,QAAQ,UAIpCiB,EAAYC,YAAY,CAC1BC,KAAM,OACNL,eACAM,SAAS,CACLC,MAAMzB,EAAO0B,GACT1B,EAAMmB,MAAQO,EAAOC,QAAQR,MAC7BhB,aAAaE,QAAQ,QAASqB,EAAOC,QAAQR,OAC7CnB,EAAMF,YAAa,EACnBE,EAAMoB,MAAQM,EAAOC,QAAQP,MAC7BjB,aAAaE,QAAQ,QAASqB,EAAOC,QAAQP,MACjD,EACAQ,OAAO5B,GACHG,aAAa0B,WAAW,SACxB1B,aAAa0B,WAAW,SACxB7B,EAAMmB,MAAQ,GACdnB,EAAMF,YAAa,CACvB,KAImBuB,EAAUS,QAEtBT,QAAiB,Q,MCzBhC,MAGMU,EAAgBT,YAAY,CAC9BC,KAAM,WACNL,aALiB,CAAEc,UAAW,IAM9BR,SAAS,CACLS,iBAAiBjC,EAAO0B,GACpBA,EAAOC,QAAQO,SAAQC,IACnBA,EAASC,OAAUD,EAASE,QACvBF,EAASG,YACTH,EAASI,UACVJ,EAASK,WAAaL,EAASM,gBAAkB,UAAW,WADtC,SADE,UADU,UAGoC,IAE9EzC,EAAMgC,UAAYN,EAAOC,OAC7B,KAmCuBI,EAAcD,QAE9BC,QAAqB,QC5CrBW,MAPDC,YAAe,CACzBC,QAAS,CACL3C,KAAM4C,EACNb,UAAWc,KCCnBC,IAASC,OACP1E,cAAC2E,IAAQ,CAACP,MAAOA,EAAMrE,SACrBC,cAAC4E,IAAa,CAAA7E,SACZC,cAACuB,EAAG,QAGRsD,SAASC,eAAe,Q","file":"static/js/main.89ccf2a1.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport \"./NavBar.css\";\nimport BackPNG from \"./Back.png\";\nimport infoPNG from \"./info.png\";\nimport { Link } from \"react-router-dom\";\nimport { Hidden } from \"@mui/material\";\n\nfunction NavBar(props) {\n  return (\n    <div className=\"nav\">\n      <div className=\"back-png\">\n        {/* <div>\n          <Link to={props.linkText}>\n            <img className=\"back-png\" src={BackPNG} alt=\"abc\"></img>\n          </Link>\n        </div> */}\n        {/* <Hidden mdDown>\n          <div\n            style={{\n              color: \"white\",\n              display: \"contents\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ fontSize: \"1.3em\" }}>Home</div>\n          </div>\n        </Hidden> */}\n      </div>\n      {/* <div className=\"heading\">Editor</div> */}\n      <div className=\"info-png\">\n        {props.download && <>{props.downloadElement}</>}\n        {/* {props.downloadIcon && <img src={props.downloadIcon} alt=\"abc\" ></img>} */}\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Cards.css\";\n\nfunction TemplatesCard(props) {\n  return (\n    <div>\n      <div className=\"recently-used-templates\">\n        <div align=\"center\">\n          <img alt={props.image} src={props.image} />\n        </div>\n\n        <div>{props.text}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default TemplatesCard;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport NavBar from \"./NavBar/NavBar\";\nimport \"./EditorTemplates.css\";\nimport { Link } from \"react-router-dom\";\nimport ButtonLarge from \"./Buttons/ButtonLarge\";\nimport TemplatesCard from \"./Cards/TemplatesCard\";\n\nconst templates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\nfunction EditorTemplates() {\n  const [show, setShow] = useState(true);\n  return (\n    <div>\n      <NavBar linkText=\"/pamphlet/create/editor-home\" />\n      <div className=\"body\">\n        {/* <div className=\"select-sec\">\n          <div style={{ width: \"50%\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <ButtonLarge text=\"You Might Like\" />\n            </div>\n          </div>\n          <div style={{ width: \"50%\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <ButtonLarge text=\"Categories\" />\n            </div>\n          </div>\n        </div> */}\n        <div className=\"opt-flex\">\n          <div\n            className={!show ? \"opt-text\" : \"opt-text-selected\"}\n            onClick={() => setShow(true)}\n          >\n            You Might Like\n          </div>\n          <div\n            className={show ? \"opt-text\" : \"opt-text-selected\"}\n            onClick={() => setShow(false)}\n          >\n            Categories\n          </div>\n        </div>\n        {show && (\n          <>\n            <div className=\"cards-flex\">\n              {templates.map((template, index) => {\n                return <TemplatesCard />;\n              })}\n            </div>\n          </>\n        )}\n        {!show && <h1>category</h1>}\n      </div>\n    </div>\n  );\n}\n\nexport default EditorTemplates;\n","export default __webpack_public_path__ + \"static/media/bg.d5a2a118.jpg\";","/* eslint-disable react/jsx-pascal-case */\nimport React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport \"./app.scss\"\n\nimport EditorTemplates from \"./components/EditorDesign/EditorTemplates\";\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { bgwallpaper } from \"./media\";\n\nconst Editor = React.lazy(() => import(\"./components/Editor/Editor\"));\n\nfunction App() {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  var urlHit = localStorage.getItem(\"page_view\");\n  localStorage.setItem(\"page_view\", 1);\n  var urlHit2 = Number(urlHit) + 1;\n  localStorage.setItem(\"page_view\", urlHit2);\n\n  return (\n    <div className=\"App\">\n      <div className=\"image_container blur\">\n        <img className=\"bg_img_main\" src={bgwallpaper} alt={\"bgimg\"}></img>\n      </div>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          {!isLoggedIn && (\n            <>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/editor\"/>\n              </Route>\n              <Route path=\"templates\" exact>\n                <EditorTemplates />\n              </Route>\n              <Route path=\"/editor\" exact>\n                <Editor />\n              </Route>\n              <Route path=\"editor-download\" exact>\n                <Editor />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialToken = localStorage.getItem('token');\nconst initialPhone = localStorage.getItem('phone');\n\nconst initialState = { token: initialToken, isLoggedIn: !!initialToken, phone:initialPhone };\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers:{\n        login(state, action){\n            state.token = action.payload.token;\n            localStorage.setItem('token', action.payload.token);\n            state.isLoggedIn = true;\n            state.phone = action.payload.phone\n            localStorage.setItem('phone', action.payload.phone);\n        },\n        logout(state){\n            localStorage.removeItem('token');\n            localStorage.removeItem('phone');\n            state.token = '';\n            state.isLoggedIn = false;\n        }\n    } \n});\n\nexport const authActions = authSlice.actions;\n\nexport default authSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nimport { API_URL } from '../constant/apiURL';\n\nconst initialState = { campaigns: [] };\n\n\nconst campaignSlice = createSlice({\n    name: 'campaign',\n    initialState,\n    reducers:{\n        replaceCampaigns(state, action){\n            action.payload.forEach(campaign => {\n                campaign.status = !campaign.is_paid ? 'Not Paid': \n                    !campaign.is_approved ? 'Pending' : \n                    !campaign.is_active ? 'Paused' : \n                    campaign.quantity !== campaign.distributed_qty ? 'Running': 'Finished';\n            });\n            state.campaigns = action.payload;\n        },\n    }\n});\n\nexport const fetchCampaignData = (token) => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const res = await fetch(\n                API_URL + 'campaign/pamphlets/list/',\n                {\n                    headers:{\n                        'Authorization': `Token ${token}`\n                    },\n                }\n            );\n\n            if(!res.ok){\n                console.log(res);\n                throw new Error('Could not fetch data');\n            }\n\n            const data = await res.json();\n\n            return data;\n        }\n\n        try{\n            const campaignsData = await fetchData();\n            dispatch(campaignSlice.actions.replaceCampaigns(campaignsData))\n        }catch (error){\n            console.error(error);\n        }\n    };\n}\n\nexport const campaignActions = campaignSlice.actions;\n\nexport default campaignSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\n\nimport authReducer from './auth-slice';\nimport campaignReducer from './campaign-slice';\n\nconst store = configureStore({\n    reducer: {\n        auth: authReducer,\n        campaigns: campaignReducer\n    }\n});\n\nexport default store;","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}